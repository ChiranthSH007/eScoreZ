import 'dart:async';

import 'package:esportzzz/Main_Pages/homepage.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import 'package:fluttertoast/fluttertoast.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:otp_text_field/otp_field.dart';
import 'package:otp_text_field/otp_field_style.dart';
import 'package:otp_text_field/style.dart';

class Phone_Number extends StatefulWidget {
  final String uname, passwd, conpasswd, email, pnum;
  const Phone_Number({
    Key? key,
    required this.uname,
    required this.passwd,
    required this.pnum,
    required this.conpasswd,
    required this.email,
  }) : super(key: key);

  @override
  _Phone_NumberState createState() => _Phone_NumberState();
}

class _Phone_NumberState extends State<Phone_Number> {
  final GlobalKey<FormState> _formKey = GlobalKey<FormState>();
  final TextEditingController _pNumberController = TextEditingController();
  late PhoneAuthCredential cRedphone;
  String butText = "Get OTP";
  String smsCode = "";
  bool codessent = false;
  String verificationId = "";
  final FirebaseAuth _auth = FirebaseAuth.instance;
  bool isLoading = false;
  @override
  Widget build(BuildContext context) {
    Size size = MediaQuery.of(context).size;
    return Scaffold(
      backgroundColor: Color(0xff1f1a30),
      body: isLoading
          ? CircularProgressIndicator()
          : Container(
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Container(
                    child: Text(
                      "Verification",
                      style: GoogleFonts.nunito(
                          color: Colors.white,
                          fontWeight: FontWeight.bold,
                          fontSize: size.width * 0.075),
                    ),
                  ),
                  SizedBox(
                    height: size.height * 0.015,
                  ),
                  Container(
                    child: Text(
                      "We will send you a OTP to your Phone number ",
                      style: GoogleFonts.nunito(
                        color: Colors.white,
                      ),
                    ),
                  ),
                  Center(child: Form(key: _formKey, child: pnTextFld())),
                  Container(
                    width: MediaQuery.of(context).size.width - 30,
                    child: Row(
                      children: [
                        Expanded(
                          child: Container(
                            height: 1,
                            color: Colors.grey,
                            margin: EdgeInsets.symmetric(horizontal: 12),
                          ),
                        ),
                        Text(
                          "Enter 6 digit OTP",
                          style: GoogleFonts.nunito(color: Colors.white),
                        ),
                        Expanded(
                          child: Container(
                            height: 1,
                            color: Colors.grey,
                            margin: EdgeInsets.symmetric(horizontal: 12),
                          ),
                        ),
                      ],
                    ),
                  ),
                  Center(
                    child: Container(
                      padding: EdgeInsets.fromLTRB(40, 10, 40, 30),
                      child: OTPTextField(
                        outlineBorderRadius: 20,
                        length: 6,
                        width: MediaQuery.of(context).size.width / 0.9,
                        otpFieldStyle: OtpFieldStyle(
                          backgroundColor: Color(0xff39304d),
                        ),
                        style: TextStyle(fontSize: 17, color: Colors.white),
                        textFieldAlignment: MainAxisAlignment.spaceEvenly,
                        fieldStyle: FieldStyle.underline,
                        onCompleted: (pin) {
                          setState(() {
                            smsCode = pin;
                          });
                          // AuthCredential phoneAuthCredential =
                          //     PhoneAuthProvider.credential(
                          //         verificationId: verificationID, smsCode: pin);
                        },
                      ),
                    ),
                  ),
                  ConstrainedBox(
                    constraints: BoxConstraints.tightFor(
                      width: size.width * 0.6,
                      height: size.height * 0.06,
                    ),
                    child: ElevatedButton(
                      onPressed: () {
                        if (_formKey.currentState!.validate()) {
                          if (codessent) {
                            setState(() async {
                              await signUpwithPhoneNumber(
                                  verificationId, smsCode, context);
                            });
                          } else {
                            setState(() async {
                              await verifyPhoneNumber(
                                  "+91${_pNumberController.text}", context);
                            });
                          }
                        }
                      },
                      child: Text(
                        butText,
                        style: GoogleFonts.nunito(
                          color: Colors.black,
                          fontWeight: FontWeight.bold,
                        ),
                      ),
                      style: ElevatedButton.styleFrom(
                        primary: Color(0xff0ef5e3),
                        shape: RoundedRectangleBorder(
                            borderRadius:
                                new BorderRadius.circular(size.width * 0.5)),
                        side: BorderSide(
                          width: size.width * 0.004,
                          color: Color(0xff0ef5e3),
                        ),
                      ),
                    ),
                  ),
                ],
              ),
            ),
    );
  }

  Future<void> verifyPhoneNumber(
      String phoneNumber, BuildContext context) async {
    PhoneVerificationCompleted verificationCompleted =
        (PhoneAuthCredential phoneAuthCredential) async {
      Fluttertoast.showToast(msg: "Verification Completed");
    };
    PhoneVerificationFailed verificationFailed =
        (FirebaseAuthException exception) {
      Fluttertoast.showToast(msg: exception.toString());
    };
    PhoneCodeSent codeSent =
        (String verificationID, [int? forceResnedingtoken]) {
      Fluttertoast.showToast(msg: "Verification Code sent on the phone number");
      setState(() {
        verificationId = verificationID;
        codessent = true;
        butText = "Verify";
      });
    };

    PhoneCodeAutoRetrievalTimeout codeAutoRetrievalTimeout =
        (String verificationID) {
      Fluttertoast.showToast(msg: "Time out");
    };
    try {
      await _auth.verifyPhoneNumber(
          timeout: Duration(seconds: 60),
          phoneNumber: phoneNumber,
          verificationCompleted: verificationCompleted,
          verificationFailed: verificationFailed,
          codeSent: codeSent,
          codeAutoRetrievalTimeout: codeAutoRetrievalTimeout);
    } catch (e) {
      Fluttertoast.showToast(msg: e.toString());
    }
  }

  Future<void> signUpwithPhoneNumber(
      String verificationId, String smsCode, BuildContext context) async {
    try {
      PhoneAuthCredential credential = PhoneAuthProvider.credential(
          verificationId: verificationId, smsCode: smsCode);
      setState(() {
        cRedphone = credential;
        isLoading = true;
      });
      _register();
      setState(() {
        isLoading = false;
      });
      Navigator.pushAndRemoveUntil(
          context,
          MaterialPageRoute(builder: (builder) => HomePage()),
          (route) => false);

      Fluttertoast.showToast(msg: "logged In");
    } catch (e) {
      Fluttertoast.showToast(msg: e.toString());
    }
  }

  void _register() async {
    String uname = widget.uname;
    String email = widget.email;
    String password = widget.passwd;
    String confpassword = widget.conpasswd;
    String phoneunumber = widget.pnum;

    //User? userdetails = FirebaseAuth.instance.currentUser;

    if (password == confpassword) {
      try {
        User? user = (await _auth.createUserWithEmailAndPassword(
                email: email, password: password))
            .user;
        // userdetails!.updateDisplayName(uname);
        setState(() async {
          print(user);
          print(uname);
          if (user != null) {
            print(cRedphone);
            await _auth.currentUser!.updateDisplayName(uname);
            await _auth.currentUser!.updatePhoneNumber(cRedphone);

            Fluttertoast.showToast(msg: "User Created");
          } else {
            print("user details not updated");
          }
        });
      } catch (e) {
        Fluttertoast.showToast(msg: e.toString());
      }
    } else {
      Fluttertoast.showToast(msg: "Passwords Dont Match");
    }
  }

  Widget pnTextFld() {
    return Container(
      padding: EdgeInsets.all(20),
      child: Container(
        // color: Colors.grey[850],
        child: TextFormField(
          style: TextStyle(color: Colors.white),
          keyboardType: TextInputType.number,
          controller: _pNumberController,
          validator: (item) {
            return item!.length == 10 ? null : "Enter Valid Phone Number";
          },
          decoration: InputDecoration(
            prefixIcon: Padding(
              padding: EdgeInsets.symmetric(vertical: 16, horizontal: 10),
              child: Text(
                "+91",
                style: GoogleFonts.nunito(color: Colors.white),
              ),
            ),
            filled: true,
            fillColor: Color(0xff39304d),
            enabledBorder: const OutlineInputBorder(
              borderRadius: BorderRadius.all(Radius.circular(40.0)),
              borderSide: const BorderSide(color: Colors.transparent),
            ),
            focusedErrorBorder: OutlineInputBorder(
              borderRadius: BorderRadius.all(Radius.circular(40.0)),
              borderSide: BorderSide(color: Colors.transparent),
            ),
            errorBorder: OutlineInputBorder(
              borderRadius: BorderRadius.all(Radius.circular(40.0)),
              borderSide: BorderSide(color: Colors.transparent),
            ),
            labelText: 'Phone Number',
            labelStyle: GoogleFonts.nunito(color: Colors.white),
            focusedBorder: const OutlineInputBorder(
                borderRadius: BorderRadius.all(Radius.circular(40.0)),
                borderSide: const BorderSide(color: Colors.transparent)),
          ),
        ),
      ),
    );
  }
}
